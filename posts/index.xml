<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on HHKBは体の一部</title>
    <link>https://www.trhrkmk.com/posts/</link>
    <description>Recent content in Posts on HHKBは体の一部</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://twitter.com/trhrkmk&#34;&gt;trhrkmk&lt;/a&gt; 2018</copyright>
    <lastBuildDate>Wed, 02 Jan 2019 11:14:10 +0900</lastBuildDate>
    
	<atom:link href="https://www.trhrkmk.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>youtube-dlを使ってプレイリストを一括ダウンロードした</title>
      <link>https://www.trhrkmk.com/posts/download-youtube-dl-playlist/</link>
      <pubDate>Wed, 02 Jan 2019 11:14:10 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/download-youtube-dl-playlist/</guid>
      <description>先日、Youtubeの動画をダウンロードしてmp3に変換するシェルスクリプトを作ったという記事を書きました。
しかし、プレイリストを一括でダウンロードしたいと思い、youtube-dlを使って一括ダウンロードを試みましたのでメモ。
youtube-dl まずはyoutube-dl(https://rg3.github.io/youtube-dl/)を使えるようにします。
詳細はREADME.mdをみてください。
シェルスクリプト1 シンプルに1曲のみダウンロードするためのシェルスクリプトを作りました。
ファイル名はお任せ。
youtube-dl.shなど
chmodも忘れずに。
Gistからダウンロード (cmd) /var/tmp $ curl -o youtube-dl.sh &amp;quot;https://gist.githubusercontent.com/teruhirokomaki/8f0333c35cb8aa1ba8692a25a8a04336/raw/6d53ea298f6c2e5dde2f5de1949f76747ec48fa3/youtube-dl.sh&amp;quot;  補足 最初はv=YOUTUBEIDのYOUTUBEIDを引数として使っていましたが、一括ダウンロードの途中で、エラーになってしまいました。
URLを確認するとhttps://www.youtube.com/watch?v=-FyjEnoIgTMとなっており、引数が-FyjEnoIgTMとなることが原因でした。
ということで、URLを引数にするように修正しました。
#!/usr/bin/env bash set -Ceuo pipefail # set youtube id from param YOUTUBEID=&amp;quot;$1&amp;quot; if [ x$YOUTUBEID = &amp;quot;x&amp;quot; ]; then echo &amp;quot;Youtube id is required.&amp;quot; exit 1 fi # set url YDLURL=&amp;quot;https://www.youtube.com/watch?v=$YOUTUBEID&amp;quot; # set music dir MUSICDIR=&amp;quot;$HOME/Music/cmus&amp;quot; # mkdir music dir if [ ! -d $MUSICDIR ]; then mkdir -p $MUSICDIR fi # get filename YDLGETFILENAME=$(youtube-dl --get-filename --restrict-filenames -o &#39;%(creator)s/%(title)s.</description>
    </item>
    
    <item>
      <title>Youtubeの動画をダウンロードしてmp3に変換するシェルスクリプトを作った</title>
      <link>https://www.trhrkmk.com/posts/shellscript-download-from-youtude-and-convert-mp3/</link>
      <pubDate>Wed, 02 Jan 2019 01:31:33 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/shellscript-download-from-youtude-and-convert-mp3/</guid>
      <description>今まで、mpsyt(https://github.com/mps-youtube/mps-youtube)で、Youtubeのプレイリストを再生してました。
しかし、Debianではうまく動かないため、mpsytをやめて別のCLIクライアントを探すことにしました。
更新 2019-01-02  やはり「Youtubeのプレイリストをまとめてダウンロードしたい」と思い、youtube-dlを使ってプレイリストを一括ダウンロードしたというブログを書きました。
 この記事ではytdlを使っていますが、上の記事ではyoutube-dlを使いました。どちらとも使いましたが、youtube-dlの方が良いと思います。
 シェルスクリプトについても、youtube-dlを使ったシェルスクリプトのほうがシンプルなため、この記事のシェルスクリプトは、見なくて良いと思います。
  cmus 色々と探しましたが、良さそうなCLIクライントがなかったので、mp3をローカルで管理することにしました。
ということで、cmus(https://cmus.github.io/)を使うことにしました。
評判通り、快適ですね。
Youtubeの動画をダウンロード YoutubeからダウンロードするCLIツールをググると、youtube-dl(https://rg3.github.io/youtube-dl/)が出てきますが、Go製のCLIツールを探すことにしました。
ytdl(https://github.com/rylio/ytdl)というCLIツールを見つけました。
パッケージとしも使えるし、使う前から、良いはずと。
rylio/ytdl こんな感じでダウンロードできる。
(cmd) ~ $ ytdl https://www.youtube.com/watch?v=3OnnDqH6Wj8 INFO[0000] Fetching video info... INFO[0000] Downloading to Flo Rida - Good Feeling [Official Video].mp4 22.38 MiB / 22.38 MiB [======================================================================================================================================================================] 100.00% 9.98 MiB/s 2s  -oオプションで指定できる。
(cmd) ~ $ ytdl -o /var/tmp/{{.Title}}.{{.Ext}} https://www.youtube.com/watch?v=3OnnDqH6Wj8 INFO[0000] Fetching video info... INFO[0000] Downloading to /var/tmp/Flo Rida - Good Feeling [Official Video].</description>
    </item>
    
    <item>
      <title>2018年を振り返る</title>
      <link>https://www.trhrkmk.com/posts/look-back-on-2018/</link>
      <pubDate>Mon, 31 Dec 2018 17:47:57 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/look-back-on-2018/</guid>
      <description>2018年を振り返ってみました。
技術的な部分についてですが、雑に振り返ります。
fmOAuth fmOAuthというソリューションを作成しまして、最終的にGitHubにて公開しました。
簡単にいうと、FileMakerからGoogleのAPIをコールするためのファイルです。
GitHubに公開するまでは、Webサイトからのみダウンロードできるようにしており、Webサイトからダウンロードされた回数は102回でした。
多いか少ないか良く分かりませんが、ありがとうございした。
海外の開発者の方から、問い合わせを頂くことが増えました。
 fmOAuth (https://github.com/frudens/fmoauth)  年末に見たところ、海外の開発者の方がForkしてくれてました。なんか嬉しいですね。
ターミナル なぜターミナルを勉強し始めたのかは、覚えていません 笑
ふと気づいたら、サーバーにSSHで接続してマイグレーションをしていました。
LinuxやGolang、フロンエンド、AWSやGCPのCLIツールでもターミナルは必須になるので、ターミナルで一通りの操作ができるようになったのは、以外に大きいことでした。
AWS、GCP AWSやGCPは、なくてはならないものになりました。
AWSで使ったのは…
 Route 53 Cognito CloudFront SES DynamoDB Lambda S3 API Gateway EC2 Lightsail  GCPで使ったのは…
 App Engine Compute Engine Cloud Functions Datastore Firebase  個人的には、Golangを書くようになってからは、GCPばっかり使ってました。
とくにApp Engineが好き。
もっと色々なサービスを試しつつ、知識も少しづつ広げていきたいところです。
Golang いつ勉強を始めたか覚えていませんが、楽しくて楽しくて、2018年の後半はずっとGolangを勉強してました。
ターミナルでの生活を始めたこともあり、簡単なCLIツールを作りました。
(コードはダメダメでしょうけども…)
 sheetskv (https://github.com/frudens/sheetskv) goFMDataMigration (https://github.com/frudens/gofmdatamigration)  個人的には、Golangを書けるようになったことが、一番大きな収穫だったと思います。
FileMakerは良くも悪くも、頑張れば色々と作れてしまいます。
しかし、Golangができるようになって、考え方が変わりました。
 Webビューアで複雑なことはせず、ブラウザでアクセスできるWebアプリを作る。 頑張ってcURLコマンドを使わないで、APIのブリッジを作る。  簡単に言うと「Webに関連する機能は、できる限りFileMakerで実装しない。」という考えになりました。
あくまで、自分一人で開発する場合の話ですが…</description>
    </item>
    
    <item>
      <title>Vimをビルドするときのconfigureのメモ(Debian)</title>
      <link>https://www.trhrkmk.com/posts/vim-build-note-on-debian/</link>
      <pubDate>Mon, 31 Dec 2018 10:32:28 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/vim-build-note-on-debian/</guid>
      <description>&lt;p&gt;Vimをビルドするときの&lt;code&gt;configure&lt;/code&gt;のオプションをメモっておく。&lt;/p&gt;

&lt;p&gt;詳細は vim-jp の記事を見るのが良いと思います。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://vim-jp.org/docs/build_linux.html&#34; target=&#34;_blank&#34;&gt;https://vim-jp.org/docs/build_linux.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ThinkPad T480s を購入した(Debian, i3wm)</title>
      <link>https://www.trhrkmk.com/posts/purchased-thinkpad-t480s/</link>
      <pubDate>Fri, 28 Dec 2018 22:32:52 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/purchased-thinkpad-t480s/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.lenovo.com/jp/ja/notebooks/thinkpad/t-series/ThinkPad-T480s/p/22TP2TT480S&#34; target=&#34;_blank&#34;&gt;ThinkPad T480s&lt;/a&gt; を購入した。&lt;/p&gt;

&lt;p&gt;購入後、しばらく使っているけど、かなり満足してる。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bash(Viモード)の設定やコマンドのメモ</title>
      <link>https://www.trhrkmk.com/posts/bash-vi-mode-command-setting/</link>
      <pubDate>Sun, 04 Nov 2018 21:22:16 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/bash-vi-mode-command-setting/</guid>
      <description>&lt;p&gt;先日、&lt;a href=&#34;https://www.trhrkmk.com/posts/setting-vi-mode-in-bash-comfortable/&#34; target=&#34;_blank&#34;&gt;BashをViモードに変更して快適になった話&lt;/a&gt;というブログを書きました。&lt;/p&gt;

&lt;p&gt;BashをViモードに変更して使うようになってから、快適にターミナルを使っています。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BashをViモードに変更して快適になった話</title>
      <link>https://www.trhrkmk.com/posts/setting-vi-mode-in-bash-comfortable/</link>
      <pubDate>Sat, 03 Nov 2018 08:07:02 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/setting-vi-mode-in-bash-comfortable/</guid>
      <description>&lt;p&gt;私は、まだまだ初心者のVimmerだと思いますが、Vimがあまりにも快適で使っていて気持ち良いため、普段からキーバインドをVimに変更できないかをググっています。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fzfを使ってターミナルでの作業を効率化する</title>
      <link>https://www.trhrkmk.com/posts/fzf-command-line-productivity-tools/</link>
      <pubDate>Thu, 18 Oct 2018 21:02:28 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/fzf-command-line-productivity-tools/</guid>
      <description>&lt;p&gt;タイトルの通りですが、自分なりにfzfを使ってターミナルでの作業を効率化できたので、メモ。&lt;/p&gt;

&lt;p&gt;すごく快適になるので、試してみてほしいです！&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>.bashrcでOSを確認する</title>
      <link>https://www.trhrkmk.com/posts/bashrc-os-check/</link>
      <pubDate>Mon, 08 Oct 2018 23:43:10 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/bashrc-os-check/</guid>
      <description>&lt;p&gt;最近、&lt;code&gt;.bashrc&lt;/code&gt;や&lt;code&gt;.vimrc&lt;/code&gt;など、見直してました。&lt;/p&gt;

&lt;p&gt;macOSで利用している&lt;code&gt;.bashrc&lt;/code&gt;を、Linuxでも利用したいと思ったからです。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LightsailのRedmine(Bitnami)でLet&#39;s Encryptを手動更新するときのメモ</title>
      <link>https://www.trhrkmk.com/posts/lightsail-bitnami-redmine-letsencrypt/</link>
      <pubDate>Sun, 30 Sep 2018 16:06:11 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/lightsail-bitnami-redmine-letsencrypt/</guid>
      <description>&lt;p&gt;LightsailのRedmineで、Let&amp;rsquo;s Encryptを使っていて、手動更新するときのメモです。&lt;/p&gt;

&lt;p&gt;sshの設定もメモっとく。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Windows ServerでLet&#39;s EncryptのDNS認証を試みて失敗した話</title>
      <link>https://www.trhrkmk.com/posts/letsencrypt-dns-windows-win-acme/</link>
      <pubDate>Sat, 22 Sep 2018 10:08:11 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/letsencrypt-dns-windows-win-acme/</guid>
      <description>&lt;p&gt;以前、&lt;a href=&#34;https://www.trhrkmk.com/posts/filemaker-server-ssl-letsencrypt-windows-server/&#34; target=&#34;_blank&#34;&gt;FileMaker ServerにLet&amp;rsquo;s EncryptのSSL証明書を設定する&lt;/a&gt;というブログを書きました。&lt;/p&gt;

&lt;p&gt;ブログを書いている時は、&lt;strong&gt;HTTPでの認証が一般的だろう&lt;/strong&gt;程度でやっていました。&lt;/p&gt;

&lt;p&gt;しかし、もっと簡単にできるはずだ！と思いググってみた。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugoのリンクを新規タブ(target=&#39;_blank&#39;)で開く設定のメモ</title>
      <link>https://www.trhrkmk.com/posts/hugo-link-target-blank-markdown/</link>
      <pubDate>Sat, 15 Sep 2018 18:40:06 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/hugo-link-target-blank-markdown/</guid>
      <description>&lt;p&gt;Hugoでブログを書いていて「&lt;strong&gt;リンクを新規タブで開くようにしたいなー&lt;/strong&gt;」と思い、設定したのでメモ。&lt;/p&gt;

&lt;p&gt;なにも設定せずにリンク&lt;code&gt;[ぐーぐる](https://google.com)&lt;/code&gt;を使うと、以下のようなhtmlになります。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>FileMaker ServerにLet&#39;s EncryptのSSL証明書を設定する</title>
      <link>https://www.trhrkmk.com/posts/filemaker-server-ssl-letsencrypt-windows-server/</link>
      <pubDate>Sat, 15 Sep 2018 11:07:40 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/filemaker-server-ssl-letsencrypt-windows-server/</guid>
      <description>&lt;p&gt;FileMaker Server(Windows Server)に&lt;strong&gt;Let&amp;rsquo;s EncryptのSSL証明書&lt;/strong&gt;を設定する際のメモ。&lt;/p&gt;

&lt;p&gt;FileMakerでは、Let&amp;rsquo;s Encryptはサポートされていないため、&lt;strong&gt;すべて自己責任&lt;/strong&gt;でチャレンジしてください。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>FileMakerのテーブルビューのヘッダーに表示するテキストラベルのメモ</title>
      <link>https://www.trhrkmk.com/posts/filemaker-text-label-get-function/</link>
      <pubDate>Tue, 11 Sep 2018 22:30:57 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/filemaker-text-label-get-function/</guid>
      <description>&lt;p&gt;FileMaker開発者は、テーブルビューをよく使うと思います。&lt;/p&gt;

&lt;p&gt;そのテーブルビューのヘッダー部分に表示するテキストのメモです。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AddThisを使ってHugoに共有ボタン(Share Button)を追加する</title>
      <link>https://www.trhrkmk.com/posts/hugo-share-button-addthis/</link>
      <pubDate>Sun, 09 Sep 2018 11:23:36 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/hugo-share-button-addthis/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hugoに共有ボタンを追加したい&lt;/strong&gt;なと思い、調べて追加したのでメモ。&lt;/p&gt;

&lt;p&gt;色々な方法があるとおもいますが、AddThisを使うことで簡単に追加できると思います。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux(Debian Stretch)でTexpander(TextExpanderのようなスニペットツール)を使ってみた</title>
      <link>https://www.trhrkmk.com/posts/linux-textexpander-typinator-similar-app-introduction/</link>
      <pubDate>Thu, 06 Sep 2018 00:41:40 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/linux-textexpander-typinator-similar-app-introduction/</guid>
      <description>&lt;p&gt;仕事の関係もあり、普段使っているマシンはMacBookPro15で、スニペットツールとして&lt;strong&gt;Typinator&lt;/strong&gt;を利用しています。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>FMPerceptionで使われていないフィールドやスクリプトを削除する時のメモ</title>
      <link>https://www.trhrkmk.com/posts/filemaker-fmperception-check-unreferenced/</link>
      <pubDate>Sun, 02 Sep 2018 17:22:32 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/filemaker-fmperception-check-unreferenced/</guid>
      <description>&lt;p&gt;FileMakerで開発をしていて…&lt;/p&gt;

&lt;p&gt;「この使ってなさそうなフィールド削除したいけど、どこかで使われていたら困るから、消せないな…」&lt;/p&gt;

&lt;p&gt;なんてことはありませんか？&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Debian Stretch(GNOME)に最新のFirefoxをインストールしてアイコンも作成する</title>
      <link>https://www.trhrkmk.com/posts/debian-stretch-install-firefox-latest/</link>
      <pubDate>Tue, 28 Aug 2018 20:24:36 -0400</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/debian-stretch-install-firefox-latest/</guid>
      <description>&lt;p&gt;ご存知の通りDebian Stretch(GNOME)には、&lt;code&gt;Firefox ESR&lt;/code&gt;が入っています。&lt;/p&gt;

&lt;p&gt;今回は、&lt;strong&gt;Firefox ESR&lt;/strong&gt;ではなく、最新の&lt;strong&gt;Firefox&lt;/strong&gt;をインストールするときのメモ。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>リリース時におけるFileMaker Server(macOS)のファイルパーミッションの話</title>
      <link>https://www.trhrkmk.com/posts/filemaker-server-release-file-permission/</link>
      <pubDate>Wed, 29 Aug 2018 01:13:00 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/filemaker-server-release-file-permission/</guid>
      <description>&lt;p&gt;開発環境から、商用環境へリリースする際に、ローカル環境で&lt;code&gt;FMDataMigration&lt;/code&gt;や、独自のマイグレーションツールを実行し、データ移行すると思います。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>macOSでarp-scanコマンドを使ってRaspberry Piのipを調べる</title>
      <link>https://www.trhrkmk.com/posts/macos-command-arpscan-find-raspberrypi/</link>
      <pubDate>Mon, 27 Aug 2018 17:42:49 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/macos-command-arpscan-find-raspberrypi/</guid>
      <description>&lt;p&gt;Linuxではデフォルトでインストールされている&lt;code&gt;arp-scan&lt;/code&gt;コマンド。&lt;/p&gt;

&lt;p&gt;macOSで利用する場合は、Homebrewでインストールしましょう。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hugoでブログを作りたくなったので始めました</title>
      <link>https://www.trhrkmk.com/posts/blog-hugo-start/</link>
      <pubDate>Sun, 26 Aug 2018 00:11:48 +0900</pubDate>
      
      <guid>https://www.trhrkmk.com/posts/blog-hugo-start/</guid>
      <description>&lt;p&gt;Go言語の勉強をスタートしてから数週間が経ちました。&lt;/p&gt;

&lt;p&gt;まだまだ基本的な部分しか分かっていないですが、今までにないくらい楽しくコードを書いています。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>