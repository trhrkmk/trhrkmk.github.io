{"componentChunkName":"component---src-gatsby-theme-blog-core-templates-post-query-js","path":"/posts/setting-vi-mode-in-bash-comfortable/","result":{"data":{"site":{"siteMetadata":{"title":"trhrkmk.com","social":[{"name":"Twitter","url":"https://twitter.com/trhrkmk"},{"name":"GitHub","url":"https://github.com/trhrkmk"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"482e3e7d-96c8-5225-947d-e1adb060e822","excerpt":"私は、まだまだ初心者のVimmerだと思いますが、Vimがあまりにも快適で使っていて気持ち良いため、普段からキーバインドをVimに変更できないかをググっています。 タイトルの通り、普段使っている  Bash  にも  Vi…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"BashをViモードに変更して快適になった話\",\n  \"date\": \"2018-11-02T23:07:02.000Z\",\n  \"lastmod\": \"2018-11-02T23:07:02.000Z\",\n  \"tags\": [\"Bash\", \"Vi\"],\n  \"slug\": \"/posts/setting-vi-mode-in-bash-comfortable\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u79C1\\u306F\\u3001\\u307E\\u3060\\u307E\\u3060\\u521D\\u5FC3\\u8005\\u306EVimmer\\u3060\\u3068\\u601D\\u3044\\u307E\\u3059\\u304C\\u3001Vim\\u304C\\u3042\\u307E\\u308A\\u306B\\u3082\\u5FEB\\u9069\\u3067\\u4F7F\\u3063\\u3066\\u3044\\u3066\\u6C17\\u6301\\u3061\\u826F\\u3044\\u305F\\u3081\\u3001\\u666E\\u6BB5\\u304B\\u3089\\u30AD\\u30FC\\u30D0\\u30A4\\u30F3\\u30C9\\u3092Vim\\u306B\\u5909\\u66F4\\u3067\\u304D\\u306A\\u3044\\u304B\\u3092\\u30B0\\u30B0\\u3063\\u3066\\u3044\\u307E\\u3059\\u3002\"), mdx(\"p\", null, \"\\u30BF\\u30A4\\u30C8\\u30EB\\u306E\\u901A\\u308A\\u3001\\u666E\\u6BB5\\u4F7F\\u3063\\u3066\\u3044\\u308B \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Bash\"), \" \\u306B\\u3082 \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Vi\\u30E2\\u30FC\\u30C9\"), \" \\u304C\\u3042\\u308B\\u3068\\u3044\\u3046\\u3053\\u3068\\u304C\\u5206\\u304B\\u308A\\u3001\\u65E9\\u901F\\u5909\\u66F4\\u3057\\u305F\\u306E\\u3067\\u30E1\\u30E2\\u3002\"), mdx(\"h2\", {\n    \"id\": \"設定したターミナル\"\n  }, \"\\u8A2D\\u5B9A\\u3057\\u305F\\u30BF\\u30FC\\u30DF\\u30CA\\u30EB\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/f6daa77b516fdc8a886a8969a62f2b82/setting-vi-mode-in-bash-2.gif\",\n    \"alt\": \"bash\",\n    \"title\": \"bash\"\n  }))), mdx(\"h2\", {\n    \"id\": \"bashのviモードについてググる\"\n  }, \"Bash\\u306EVi\\u30E2\\u30FC\\u30C9\\u306B\\u3064\\u3044\\u3066\\u30B0\\u30B0\\u308B\"), mdx(\"p\", null, \"\\u306A\\u306B\\u306F\\u3068\\u3082\\u3042\\u308C\\u3001\\u30B0\\u30B0\\u308B\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://qiita.com/Pseudonym/items/2cb442ff257a2f9f9d70\"\n  }), \"vim\\u8272\\u306B\\u67D3\\u307E\\u308C\\uFF0E\\u6A5F\\u80FD\\u7D39\\u4ECB\\u306E\\u3064\\u3044\\u3067\\u306Bbash\\u3092vi\\u4ED5\\u69D8\\u306B\\uFF0E\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://s15silvia.blog.so-net.ne.jp/2013-02-24\"\n  }), \"bash\\u306E\\u7DE8\\u96C6\\u30E2\\u30FC\\u30C9\\u3092vi\\u30E2\\u30FC\\u30C9\\u306B\\u3057\\u3066\\u307F\\u308B\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://oplern.hatenablog.com/entry/2017/03/07/211623\"\n  }), \"bash\\u306E\\u64CD\\u4F5C\\u3092vi\\u98A8\\u306B\\u3059\\u308B\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://routecompass.net/shell-vi/\"\n  }), \"\\u3010Vim\\u3011\\u3048\\u3063?Vimmer\\u306A\\u306E\\u306B\\u3001\\u30B7\\u30A7\\u30EB\\u306E\\u30AD\\u30FC\\u30D0\\u30A4\\u30F3\\u30C9\\u306FEmacs\\u30E2\\u30FC\\u30C9\\u4F7F\\u3063\\u3066\\u308B\\u306E?\"))), mdx(\"p\", null, \"\\u4E0A\\u306E\\u8A18\\u4E8B\\u3067\\u306F\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~/.bashrc\"), \"\\u306B\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"set -o vi\"), \"\\u3092\\u8FFD\\u52A0\\u3059\\u308C\\u3070OK\\u3001\\u3068\\u66F8\\u3044\\u3066\\u3042\\u308B\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bashrc\"\n  }), \"# ~/.bashrc\\n\\nset -o vi\\n\")), mdx(\"p\", null, \"\\u3057\\u304B\\u3057\\u3001\\u79C1\\u306F\\u6700\\u7D42\\u7684\\u306B\\u3001\\u4EE5\\u4E0B\\u306E\\u30D6\\u30ED\\u30B0\\u3092\\u53C2\\u8003\\u306B\\u3057\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~/.bashrc\"), \"\\u3067\\u306F\\u306A\\u304F\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~/.inputrc\"), \"\\u3092\\u4FEE\\u6B63\\u3057\\u307E\\u3057\\u305F\\u3002\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://vim.wikia.com/wiki/Use_vi_shortcuts_in_terminal\"\n  }), \"Use vi shortcuts in terminal\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://d.hatena.ne.jp/yamazakiccs/20081207/1216817670\"\n  }), \"bash vi \\u6700\\u5F37\\u3067\\u3059\\u306D\\u3001\\u308F\\u304B\\u308A\\u307E\\u3059\\u3002\"))), mdx(\"p\", null, \"\\u4EE5\\u4E0B\\u306B\\u3001\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://vim.wikia.com/wiki/Use_vi_shortcuts_in_terminal\"\n  }), \"Use vi shortcuts in terminal\"), \"\\u306B\\u8A18\\u8F09\\u3055\\u308C\\u3066\\u3044\\u308B\\u8A2D\\u5B9A\\u3092\\u5F15\\u7528\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-inputrc\"\n  }), \"# ~/.inputrc\\n\\n# Use Vi, not Emacs, style editing\\nset editing-mode vi\\n\\n# Show all completions as soon as I press tab, even if there's more than one\\nset show-all-if-ambiguous on\\n# Ignore case\\nset completion-ignore-case on\\n# on menu-complete, first display the common prefix, then cycle through the \\n# options when hitting TAB\\nset menu-complete-display-prefix on\\n\\n###########################################################\\n# Keymaps for when we're in command mode (e.g., after hitting ESC)\\nset keymap vi-command\\n\\n# Insert the arguments from the last command\\n\\\"p\\\": \\\"i !!*\\\\r\\\"\\n\\n# When hitting option-up/option-down, cycle through the previous commands\\n# which start with the prefix you've entered, rather than just cycling through\\n# the last entered commands.\\n# In OS X's Terminal.app preferences, I have 'Use option as meta key' off, and\\n# have mapped \\\"option cursor up\\\" to \\\"\\\\033\\\\033[A\\\" and \\\"option cursor down\\\" to \\n# \\\"\\\\033\\\\033[B\\\".\\n# Feel free to bind to whatever you want. Delete the first '\\\\e' in the keymap\\n# to set plain up/down to do a history search by default.\\n\\\"\\\\e\\\\e[A\\\": history-search-backward\\n\\\"\\\\e\\\\e[B\\\": history-search-forward\\n\\n###########################################################\\n# Keymaps for when we're in insert (i.e., typing stuff in) mode\\nset keymap vi-insert\\n\\n# Pressing tab will list all completions & select the first one. Pressing it \\n# again will cycle through available completions.\\nTAB: menu-complete\\n# Shift-TAB cycles completions backward\\n\\\"\\\\e[Z\\\": menu-complete-backward\\n\\n# Option-up/option-down should also apply to insert mode\\n\\\"\\\\e\\\\e[A\\\": history-search-backward\\n\\\"\\\\e\\\\e[B\\\": history-search-forward\\n\\n# Needed because binding 'p' in command mode above wipes its insert mode\\n# function, too. This fixes that, and will insert 'p' when you type 'p'.\\n\\\"p\\\": self-insert\\n\")), mdx(\"h2\", {\n    \"id\": \"inputrc-を修正する\"\n  }, \"~/.inputrc \\u3092\\u4FEE\\u6B63\\u3059\\u308B\"), mdx(\"p\", null, \"\\u307B\\u3068\\u3093\\u3069\\u3001\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://vim.wikia.com/wiki/Use_vi_shortcuts_in_terminal\"\n  }), \"Use vi shortcuts in terminal\"), \"\\u306E\\u8A2D\\u5B9A\\u3092\\u30B3\\u30D4\\u30FC\\u3057\\u3066\\u3044\\u307E\\u3059\\u304C\\u2026\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"for vi mode\"), \"\\u306E\\u90E8\\u5206\\u306F\\u3001\\u306E\\u3061\\u307B\\u3069\\u8AAC\\u660E\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-inputrc\"\n  }), \"# Use Vi, not Emacs, style editing\\nset editing-mode vi\\n\\n# Show all completions as soon as I press tab, even if there's more than one\\nset show-all-if-ambiguous on\\n# Ignore case\\nset completion-ignore-case on\\n# on menu-complete, first display the common prefix, then cycle through the \\n# options when hitting TAB\\nset menu-complete-display-prefix on\\n\\n###########################################################\\n# Keymaps for when we're in command mode (e.g., after hitting ESC)\\nset keymap vi-command\\n\\n###########################################################\\n# Keymaps for when we're in insert (i.e., typing stuff in) mode\\nset keymap vi-insert\\n\\n# Pressing tab will list all completions & select the first one. Pressing it \\n# again will cycle through available completions.\\nTAB: menu-complete\\n# Shift-TAB cycles completions backward\\n\\\"\\\\e[Z\\\": menu-complete-backward\\n\\n# for vi mode\\nset show-mode-in-prompt on\\nset vi-ins-mode-string \\\\1\\\\e[34;1m\\\\2(ins) \\\\1\\\\e[0m\\\\2\\nset vi-cmd-mode-string \\\\1\\\\e[31;1m\\\\2(cmd) \\\\1\\\\e[0m\\\\2\\n\")), mdx(\"h3\", {\n    \"id\": \"せっかくなので-bashrc-のps1も載せとく\"\n  }, \"\\u305B\\u3063\\u304B\\u304F\\u306A\\u306E\\u3067 ~/.bashrc \\u306EPS1\\u3082\\u8F09\\u305B\\u3068\\u304F\"), mdx(\"p\", null, \"\\u8272\\u3092\\u3061\\u3087\\u3053\\u3061\\u3087\\u3053\\u8A2D\\u5B9A\\u3057\\u3088\\u3046\\u3068\\u601D\\u3063\\u305F\\u306E\\u3067\\u3001\\u4EE5\\u4E0B\\u306E\\u3088\\u3046\\u306B\\u8A2D\\u5B9A\\u3057\\u3066\\u308B\"), mdx(\"p\", null, \"\\u30D0\\u30C3\\u30C9\\u30D7\\u30E9\\u30AF\\u30C6\\u30A3\\u30B9\\u304B\\u3082\\u3057\\u308C\\u306A\\u3044\\u306E\\u3067\\u3001\\u512A\\u3057\\u3044\\u65B9\\u306F\\u7A81\\u3063\\u8FBC\\u3093\\u3067\\u9802\\u3051\\u308B\\u3068\\u3042\\u308A\\u304C\\u305F\\u3044\\u3067\\u3059m(_ _)m\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bashrc\"\n  }), \"#--------------------------------------------------\\n# ps1\\n#--------------------------------------------------\\n\\nfunction prompt {\\n  local GITPS='$(__git_ps1 \\\" [%s]\\\")'\\n  local BLUE=\\\"\\\\[\\\\e[1;34m\\\\]\\\"\\n  local RED=\\\"\\\\[\\\\e[1;31m\\\\]\\\"\\n  local GREEN=\\\"\\\\[\\\\e[2;32m\\\\]\\\"\\n  local WHITE=\\\"\\\\[\\\\e[00m\\\\]\\\"\\n  local GRAY=\\\"\\\\[\\\\e[1;37m\\\\]\\\"\\n  PS1=\\\"$BLUE\\\\w$BLUE$RED$GITPS$RED $WHITE\\\\$$WHITE \\\"\\n}\\nprompt\\n\")), mdx(\"h2\", {\n    \"id\": \"現在のモードがわからない問題\"\n  }, \"\\u73FE\\u5728\\u306E\\u30E2\\u30FC\\u30C9\\u304C\\u308F\\u304B\\u3089\\u306A\\u3044\\u554F\\u984C\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".inputrc\"), \"\\u3092\\u8A2D\\u5B9A\\u3057\\u3001\\u30BF\\u30FC\\u30DF\\u30CA\\u30EB\\u3092\\u8D77\\u52D5\\u3059\\u308C\\u3070\\u3001\\u7121\\u4E8B Vi\\u30E2\\u30FC\\u30C9\\u306B\\u306A\\u3063\\u3066\\u3044\\u308B\\u306F\\u305A\"), mdx(\"p\", null, \"\\u3053\\u306E\\u72B6\\u614B\\u3067\\u3001\\u3057\\u3070\\u3089\\u304F\\u4F7F\\u3063\\u3066\\u3044\\u305F\\u306E\\u3067\\u3059\\u304C\\u3001\\u30BF\\u30FC\\u30DF\\u30CA\\u30EB\\u306B\\u73FE\\u5728\\u306E\\u30E2\\u30FC\\u30C9\\u304C\\u8868\\u793A\\u3055\\u308C\\u3066\\u3044\\u306A\\u3044\\u305F\\u3081\\u3001\\u73FE\\u5728\\u306E\\u30E2\\u30FC\\u30C9\\u304C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ins\"), \"\\u306A\\u306E\\u304B\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cmd\"), \"\\u306A\\u306E\\u304B\\u5206\\u304B\\u3089\\u306A\\u3044\\u554F\\u984C\\u304C\\u767A\\u751F\"), mdx(\"p\", null, \"\\u3068\\u3044\\u3046\\u3053\\u3068\\u3067\\u3001\\u30BF\\u30FC\\u30DF\\u30CA\\u30EB\\u306B\\u73FE\\u5728\\u306E\\u30E2\\u30FC\\u30C9\\u3092\\u8868\\u793A\\u3059\\u308B\\u305F\\u3081\\u306B\\u3001\\u5F15\\u304D\\u7D9A\\u304D\\u30B0\\u30B0\\u308B\"), mdx(\"h2\", {\n    \"id\": \"ターミナルに現在のモードを表示する\"\n  }, \"\\u30BF\\u30FC\\u30DF\\u30CA\\u30EB\\u306B\\u73FE\\u5728\\u306E\\u30E2\\u30FC\\u30C9\\u3092\\u8868\\u793A\\u3059\\u308B\"), mdx(\"p\", null, \"\\u4EE5\\u4E0B\\u306E\\u8A18\\u4E8B\\u306B\\u305F\\u3069\\u308A\\u7740\\u3044\\u305F\"), mdx(\"p\", null, \"\\u8272\\u3005\\u3068\\u898B\\u305F\\u304C\\u3001\\u304A\\u305D\\u3089\\u304F \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"GitHub\"), \" \\u306E\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"README.md\"), \"\\u3092\\u898B\\u308B\\u306E\\u304C\\u3001\\u308F\\u304B\\u308A\\u3084\\u3059\\u3044\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://stackoverflow.com/questions/1039713/different-bash-prompt-for-different-vi-editing-mode\"\n  }), \"Different bash prompt for different vi editing mode?\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/calid/bash\"\n  }), \"calid/bash\"))), mdx(\"p\", null, \"GitHub\\u3092\\u898B\\u308B\\u3068\\u3001Bash\\u306E\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\\u304C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"4.3.48\"), \"\\u4EE5\\u4E0A\\u304C\\u5FC5\\u8981\\u3063\\u307D\\u3044\"), mdx(\"p\", null, \"\\u73FE\\u5728\\u4F7F\\u3063\\u3066\\u3044\\u308BBash\\u306E\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\\u3092\\u78BA\\u8A8D\\u3057\\u3001\\u5FC5\\u8981\\u3067\\u3042\\u308C\\u3070\\u3001brew\\u3067\\u30A4\\u30F3\\u30B9\\u30C8\\u30FC\\u30EB\\u3057\\u3001\\u30ED\\u30B0\\u30A4\\u30F3\\u30B7\\u30A7\\u30EB\\u3092\\u5909\\u66F4\\u3059\\u308B\\u5FC5\\u8981\\u304C\\u3042\\u308B\"), mdx(\"h4\", {\n    \"id\": \"bashのバージョンの確認\"\n  }, \"Bash\\u306E\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\\u306E\\u78BA\\u8A8D\"), mdx(\"p\", null, \"\\u307E\\u305A\\u306F\\u78BA\\u8A8D\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"~ $ /bin/bash -version\\nGNU bash, version 3.2.57(1)-release (x86_64-apple-darwin17)\\nCopyright (C) 2007 Free Software Foundation, Inc.\\n\")), mdx(\"h3\", {\n    \"id\": \"brewでbashをインストールする\"\n  }, \"brew\\u3067Bash\\u3092\\u30A4\\u30F3\\u30B9\\u30C8\\u30FC\\u30EB\\u3059\\u308B\"), mdx(\"p\", null, \"\\u3044\\u3064\\u3082\\u901A\\u308A\\u3001\\u30A4\\u30F3\\u30B9\\u30C8\\u30FC\\u30EB\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"~ $ brew install bash\\nUpdating Homebrew...\\n==> Auto-updated Homebrew!\\nUpdated 3 taps (homebrew/cask-versions, homebrew/core and homebrew/cask).\\n==> Updated Formulae\\nasciidoctor \\u2714                 ccextractor                   ethereum                      grib-api                      openvdb                       source-to-image\\nharfbuzz \\u2714                    chruby-fish                   fluent-bit                    hebcal                        pacapt                        typescript\\nweechat \\u2714                     cpprestsdk                    fonttools                     ioping                        pdftoipe                      you-get\\nactivemq                      dartsim                       git-archive-all               libjson-rpc-cpp               ppsspp\\nark                           dfmt                          glm                           liblo                         rdesktop\\nbash-snippets                 django-completion             grails                        mongo-cxx-driver              selenium-server-standalone\\n\\n==> Downloading https://homebrew.bintray.com/bottles/bash-4.4.23.high_sierra.bottle.tar.gz\\n######################################################################## 100.0%\\n==> Pouring bash-4.4.23.high_sierra.bottle.tar.gz\\n==> Caveats\\nIn order to use this build of bash as your login shell,\\nit must be added to /etc/shells.\\n==> Summary\\n\\uD83C\\uDF7A  /usr/local/Cellar/bash/4.4.23: 146 files, 8.8MB\\n\")), mdx(\"p\", null, \"brew\\u306E\\u51FA\\u529B\\u306B\\u3082\\u66F8\\u304B\\u308C\\u3066\\u3044\\u308B\\u901A\\u308A\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/shells\"), \"\\u306B\\u8FFD\\u52A0\\u3059\\u308B\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"In order to use this build of bash as your login shell,\\nit must be added to /etc/shells.\\n\")), mdx(\"h3\", {\n    \"id\": \"etcshells-に追加する\"\n  }, \"/etc/shells \\u306B\\u8FFD\\u52A0\\u3059\\u308B\"), mdx(\"p\", null, \"\\u73FE\\u5728\\u306E\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u78BA\\u8A8D\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"~ $ sudo cat /etc/shells\\n# List of acceptable shells for chpass(1).\\n# Ftpd will not allow users to connect who are not using\\n# one of these shells.\\n\\n/bin/bash\\n/bin/csh\\n/bin/ksh\\n/bin/sh\\n/bin/tcsh\\n/bin/zsh\\n\")), mdx(\"p\", null, \"brew\\u3067\\u30A4\\u30F3\\u30B9\\u30C8\\u30FC\\u30EB\\u3057\\u305FBash\\u3092\\u8FFD\\u52A0\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"~ $ sudo vim /etc/shells\\n\")), mdx(\"p\", null, \"\\u4FEE\\u6B63\\u5F8C\\u306B\\u3001\\u6539\\u3081\\u3066\\u78BA\\u8A8D\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"~ $ sudo cat /etc/shells\\n# List of acceptable shells for chpass(1).\\n# Ftpd will not allow users to connect who are not using\\n# one of these shells.\\n\\n/bin/bash\\n/bin/csh\\n/bin/ksh\\n/bin/sh\\n/bin/tcsh\\n/bin/zsh\\n/usr/local/bin/bash\\n\")), mdx(\"h3\", {\n    \"id\": \"ログインシェルを変更する\"\n  }, \"\\u30ED\\u30B0\\u30A4\\u30F3\\u30B7\\u30A7\\u30EB\\u3092\\u5909\\u66F4\\u3059\\u308B\"), mdx(\"p\", null, \"\\u5909\\u66F4\\u3059\\u308B\\u524D\\u306B\\u78BA\\u8A8D\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"~ $ which bash\\n/bin/bash\\n\")), mdx(\"p\", null, \"\\u5909\\u66F4\\u3059\\u308B\\u305F\\u3081\\u306E\\u30B3\\u30DE\\u30F3\\u30C9\\u3092\\u78BA\\u8A8D\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"~ $ man chsh\\n\")), mdx(\"p\", null, \"\\u4E00\\u90E8\\u629C\\u7C8B\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-man\"\n  }), \"CHPASS(1)                 BSD General Commands Manual                CHPASS(1)\\n\\nNAME\\n     chpass, chfn, chsh -- add or change user database information\\n\\nSYNOPSIS\\n     chpass [-l location] [-u authname] [-s newshell] [user]\\n\\nDESCRIPTION\\n     The chpass utility allows editing of the user database information associated with user or, by default, the current user.\\n\\n     The chpass utility cannot change the user's password on Open Directory systems.  Use the passwd(1) utility instead.\\n\\n     The chfn, and chsh utilities behave identically to chpass.  (There is only one program.)\\n\\n     The information is formatted and supplied to an editor for changes.\\n\\n     Only the information that the user is allowed to change is displayed.\\n\\n     The options are as follows:\\n\\n     -l location\\n             If not specified, chpass will perform a search for the user record on all available Open Directory nodes.  When specified, chpass will edit the user record on the directory node at the given location.\\n\\n     -u authname\\n             The user name to use when authenticating to the directory node containing the user.\\n\\n     -s newshell\\n             Attempt to change the user's shell to newshell.\\n\\n     Possible display items are as follows:\\n\\n           Login:              user's login name\\n           Uid:                user's login\\n           Gid:                user's login group\\n           Generated uid:      user's UUID\\n           Full Name:          user's real name\\n           Office Location:    user's office location\\n           Office Phone:       user's office phone\\n           Home Phone:         user's home phone\\n           Home Directory:     user's home directory\\n           Shell:              user's login shell\\n\")), mdx(\"p\", null, \"\\u3068\\u3044\\u3046\\u3053\\u3068\\u3067\\u3001\\u4EE5\\u4E0B\\u306E\\u30B3\\u30DE\\u30F3\\u30C9\\u3092\\u5B9F\\u884C\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"~ $ chsh -s /usr/local/bin/bash\\nChanging shell for yourName.\\nPassword for yourName:\\n\")), mdx(\"p\", null, \"\\u78BA\\u8A8D(reboot\\u5FC5\\u8981\\u304B\\u3082\\u2026)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"~ $ which bash\\n/usr/local/bin/bash\\n\")), mdx(\"h3\", {\n    \"id\": \"改めてバージョンを確認する\"\n  }, \"\\u6539\\u3081\\u3066\\u30D0\\u30FC\\u30B8\\u30E7\\u30F3\\u3092\\u78BA\\u8A8D\\u3059\\u308B\"), mdx(\"p\", null, \"\\u78BA\\u8A8D\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"~ $ bash --version\\nGNU bash, version 4.4.23(1)-release (x86_64-apple-darwin17.5.0)\\nCopyright (C) 2016 Free Software Foundation, Inc.\\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\\n\\nThis is free software; you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\")), mdx(\"h3\", {\n    \"id\": \"現在のモードが表示されるはず\"\n  }, \"\\u73FE\\u5728\\u306E\\u30E2\\u30FC\\u30C9\\u304C\\u8868\\u793A\\u3055\\u308C\\u308B\\u306F\\u305A\"), mdx(\"p\", null, \"\\u3053\\u308C\\u3067\\u73FE\\u5728\\u306E\\u30E2\\u30FC\\u30C9\\u304C\\u8868\\u793A\\u3055\\u308C\\u308B\\u306F\\u305A\"), mdx(\"h2\", {\n    \"id\": \"モードの表示を修正する\"\n  }, \"\\u30E2\\u30FC\\u30C9\\u306E\\u8868\\u793A\\u3092\\u4FEE\\u6B63\\u3059\\u308B\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~/.inputrc\"), \"\\u3092\\u4FEE\\u6B63\\u3059\\u308C\\u3070\\u3088\\u3044\"), mdx(\"p\", null, \"\\u3053\\u306E\\u30D6\\u30ED\\u30B0\\u3092\\u898B\\u3066\\u3044\\u308B\\u4EBA\\u306B\\u306F\\u3001\\u8AAC\\u660E\\u4E0D\\u8981\\u3060\\u3068\\u601D\\u3046\\u306E\\u3067\\u3001\\u5404\\u81EA\\u3067\\u8981\\u8ABF\\u6574\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-inputrc\"\n  }), \"# for vi mode\\nset show-mode-in-prompt on\\nset vi-ins-mode-string \\\\1\\\\e[34;1m\\\\2(ins) \\\\1\\\\e[0m\\\\2\\nset vi-cmd-mode-string \\\\1\\\\e[31;1m\\\\2(cmd) \\\\1\\\\e[0m\\\\2\\n\")), mdx(\"h2\", {\n    \"id\": \"あとがき\"\n  }, \"\\u3042\\u3068\\u304C\\u304D\"), mdx(\"p\", null, \"\\u3044\\u3064\\u3082\\u4F7F\\u3046\\u30BF\\u30FC\\u30DF\\u30CA\\u30EB\\u3092Vi\\u306E\\u30AD\\u30FC\\u30D0\\u30A4\\u30F3\\u30C9\\u3067\\u64CD\\u4F5C\\u3067\\u304D\\u308B\\u3088\\u3046\\u306B\\u306A\\u3063\\u3066\\u3001\\u672C\\u5F53\\u306B\\u5FEB\\u9069\\u306B\\u306A\\u3063\\u305F\"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/posts/setting-vi-mode-in-bash-comfortable/","title":"BashをViモードに変更して快適になった話","tags":["Bash","Vi"],"keywords":[],"date":"2018-11-02","image":null,"imageAlt":null,"socialImage":null},"previous":{"__typename":"MdxBlogPost","id":"1baf7b88-3302-58c8-b17c-67eebd50a9d5","excerpt":"タイトルの通りですが、自分なりにfzfを使ってターミナルでの作業を効率化できたので、メモ。 すごく快適になるので、試してみてほしいです！ fzfを使うと、どのように効率化できるのか？ ターミナル内でのディレクトリの移動が快適にできるようになります。 以下のgif…","slug":"/posts/fzf-command-line-productivity-tools/","title":"fzfを使ってターミナルでの作業を効率化する","date":"2018-10-18"},"next":{"__typename":"MdxBlogPost","id":"99b725fb-55e2-5060-aace-1cf73c61756e","excerpt":"先日、 BashをViモードに変更して快適になった話 というブログを書きました。 BashをViモードに変更して使うようになってから、快適にターミナルを使っています。 ただ、前の記事では、Vi…","slug":"/posts/bash-vi-mode-command-setting/","title":"Bash(Viモード)の設定やコマンドのメモ","date":"2018-11-04"}},"pageContext":{"id":"482e3e7d-96c8-5225-947d-e1adb060e822","previousId":"1baf7b88-3302-58c8-b17c-67eebd50a9d5","nextId":"99b725fb-55e2-5060-aace-1cf73c61756e"}}}